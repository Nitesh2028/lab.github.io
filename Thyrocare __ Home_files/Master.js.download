function fncCartClick() {    
    if (FBS_PBS_Check()) {        
        fncRedirectToCart();
    }
}

function FBS_PBS_Check() {    
    if (localStorage.getItem(LOCALSTORAGE.ITEMS) != null) {
        var items = JSON.parse(localStorage.getItem(LOCALSTORAGE.ITEMS));
        var itemCodesArray = Object.keys(items);
        var IsPBS = false;
        var IsFBS = false;
        for (var i = 0; i < itemCodesArray.length; i++) {
            if (items[itemCodesArray[i]].code == PPBS) { IsPBS = true; }
            if (items[itemCodesArray[i]].code == FBS) { IsFBS = true; }
        }

        var TotalTestsSelected = itemCodesArray.length;
        if (IsPBS) { TotalTestsSelected--; }
        if (IsFBS) { TotalTestsSelected--; }

        if ((IsPBS) && (!IsFBS)) {
            AlertBox("Please select the Fasting Blood Sugar (FBS)... to proceed with POSTPRANDIAL Blood Sugar (PBS) ");
            return false;
        }
        if ((IsFBS) && (TotalTestsSelected < 1)) {
            AlertBox("Please select the any more test to proceed with Fasting Blood Sugar(FBS) ");
            return false;
        }
        return true;
    }
    return true;
}


function AlertBox(Msg, element) {
    var optionsProps = {
        options: 1,
        title: MSGBOX.Alert,
        message: Msg,
        optionTitle: MSGBOX.Ok,
        onOptionClick: messageBoxHide(),
        onMessageBoxClose: null,
        onMessageBoxopen: null,
        focusElement: element
    };
    callMessageBox(optionsProps);
}

function callMessageBox(optionsProps) {
    var defaultOptions = {
        options: 1,
        title: "Message Box",
        message: "Thank You !",
        optionTitle: "Ok",
        onOptionClick: messageBoxHide(),
        onMessageBoxClose: null,
        onMessageBoxopen: null
    };
    var optionObject = optionsProps ? optionsProps : defaultOptions;
    var alertMessageBox = $("#alertMessageBox");
    var alertMessageContent = $("#alertMessageContent");
    var setObject = {
        box: "alertMessageBox",
        boxContainer: "alertMessageContent",
        title: optionObject.title,
        message: optionObject.message,
        options: optionObject.options,
        optionTitle: optionObject.optionTitle,
        onOptionClick: optionObject.onOptionClick,
        focusElement: optionObject.focusElement
    };
    setMessageBoxProps(setObject);
}

function messageBoxShow(box, boxContainer, callBackOption) {
    var alertMessageBox = $("#" + box);
    var btnOk = alertMessageBox.find(".btnSubmit");
    var alertMessageContent = alertMessageBox.find("#" + boxContainer);
    alertMessageBox.show();
    btnOk.focus();
    var alertMessageTopMargin = "-" + alertMessageContent.outerHeight(true) / 2 + "px";
    var alertMessageLeftMargin = "-" + alertMessageContent.outerWidth(true) / 2 + "px";
    alertMessageContent.css({
        "margin-top": alertMessageTopMargin,
        "margin-left": alertMessageLeftMargin
    });
    if (callBackOption) {
        callBackOption();
    } else {
        return false;
    }
}

function messageBoxHide(box, element) {
    var alertMessageBox = $("#" + box);
    alertMessageBox.hide();
    if (element != undefined) {
        if (document.getElementById(element)) {
            document.getElementById(element).focus();
        }
        else {
            $("#" + element).focus();
        }        
        return true;
    } else {
        return true;
    }
}

function setMessageBoxProps(messageObj) {
    var alertMessageBox = $("#" + messageObj.box);
    var alertMessageContent = alertMessageBox.find("#" + messageObj.boxContainer);
    var alertMessageTitle = alertMessageContent.find(".title");
    var alertMessage = alertMessageContent.find(".message");
    var btnSubmit = alertMessageContent.find(".btnSubmit");
    var btnCancel = alertMessageContent.find(".btnCancel");

    alertMessageTitle.html(messageObj.title);
    alertMessage.html(messageObj.message);
    btnSubmit.val(messageObj.optionTitle);

    if (messageObj.options && messageObj.options != 2) {
        btnSubmit.click(function () {
            messageBoxHide(messageObj.box, messageObj.focusElement);
            return true;
        });
    } else {
        btnCancel.show();
        btnSubmit.click(function () {
            onOptionClick();
        });
    }
    btnCancel.click(function () {
        messageBoxHide(messageObj.box);
    });
    messageBoxShow(messageObj.box, messageObj.boxContainer);
}